{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nilay/OneDrive/Desktop/inbound-logistic/src/ai/genkit.ts"],"sourcesContent":["import { genkit } from \"genkit\";\r\nimport { googleAI } from \"@genkit-ai/googleai\";\r\n\r\nexport const ai = genkit({\r\n  plugins: [googleAI()],\r\n  model: \"googleai/gemini-2.5-flash\",\r\n});\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AAEO,MAAM,KAAK,IAAA,+LAAM,EAAC;IACvB,SAAS;QAAC,IAAA,qOAAQ;KAAG;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nilay/OneDrive/Desktop/inbound-logistic/src/ai/flows/simulate-inventory-projections.ts"],"sourcesContent":["// This is an autogenerated file from Firebase Studio.\r\n\"use server\";\r\n\r\n/**\r\n * @fileOverview Simulates inventory level projections using an AI model with known parameters and ETAs from shipment tracking.\r\n *\r\n * - simulateInventoryProjections - A function that simulates inventory level projections.\r\n * - SimulateInventoryProjectionsInput - The input type for the simulateInventoryProjections function.\r\n * - SimulateInventoryProjectionsOutput - The return type for the simulateInventoryProjections function.\r\n */\r\n\r\nimport { ai } from \"@/ai/genkit\";\r\nimport { z } from \"genkit\";\r\n\r\nconst SimulateInventoryProjectionsInputSchema = z.object({\r\n  initialInventoryLevel: z\r\n    .number()\r\n    .describe(\r\n      \"The initial inventory level at the beginning of the simulation.\"\r\n    ),\r\n  reorderPoint: z\r\n    .number()\r\n    .describe(\r\n      \"The inventory level at which a new order should be placed to replenish stock.\"\r\n    ),\r\n  reorderQuantity: z\r\n    .number()\r\n    .describe(\r\n      \"The quantity of items to order when the reorder point is reached.\"\r\n    ),\r\n  leadTimeDays: z\r\n    .number()\r\n    .describe(\"The lead time in days it takes for a new order to arrive.\"),\r\n  dailyDemandMean: z\r\n    .number()\r\n    .describe(\"The mean of daily demand for the product.\"),\r\n  dailyDemandStdDev: z\r\n    .number()\r\n    .describe(\"The standard deviation of daily demand for the product.\"),\r\n  simulationDays: z\r\n    .number()\r\n    .describe(\"The number of days to simulate inventory levels for.\"),\r\n  shipmentEtaDays: z\r\n    .array(z.number())\r\n    .describe(\r\n      \"Array of estimated time of arrival in days for incoming shipments.\"\r\n    ),\r\n  shipmentQuantities: z\r\n    .array(z.number())\r\n    .describe(\"Array of quantities for corresponding incoming shipments.\"),\r\n});\r\nexport type SimulateInventoryProjectionsInput = z.infer<\r\n  typeof SimulateInventoryProjectionsInputSchema\r\n>;\r\n\r\nconst SimulateInventoryProjectionsOutputSchema = z.object({\r\n  projectedInventoryLevels: z\r\n    .array(z.number())\r\n    .describe(\"The projected inventory levels for each day of the simulation.\"),\r\n  stockoutDays: z\r\n    .number()\r\n    .describe(\r\n      \"The number of days during the simulation where a stockout occurs.\"\r\n    ),\r\n  averageInventoryLevel: z\r\n    .number()\r\n    .describe(\"The average inventory level during the simulation period.\"),\r\n});\r\nexport type SimulateInventoryProjectionsOutput = z.infer<\r\n  typeof SimulateInventoryProjectionsOutputSchema\r\n>;\r\n\r\nexport async function simulateInventoryProjections(\r\n  input: SimulateInventoryProjectionsInput\r\n): Promise<SimulateInventoryProjectionsOutput> {\r\n  return simulateInventoryProjectionsFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: \"simulateInventoryProjectionsPrompt\",\r\n  input: { schema: SimulateInventoryProjectionsInputSchema },\r\n  output: { schema: SimulateInventoryProjectionsOutputSchema },\r\n  prompt: `You are a supply chain planning expert. Simulate inventory level projections based on the following parameters:\r\n\r\nInitial Inventory Level: {{{initialInventoryLevel}}}\r\nReorder Point: {{{reorderPoint}}}\r\nReorder Quantity: {{{reorderQuantity}}}\r\nLead Time (Days): {{{leadTimeDays}}}\r\nDaily Demand Mean: {{{dailyDemandMean}}}\r\nDaily Demand Standard Deviation: {{{dailyDemandStdDev}}}\r\nSimulation Days: {{{simulationDays}}}\r\nShipment ETAs (Days): {{{shipmentEtaDays}}}\r\nShipment Quantities: {{{shipmentQuantities}}}\r\n\r\nProject the inventory levels for each day of the simulation, considering demand, reorder point, lead time, and incoming shipments. Calculate the number of days with stockouts and the average inventory level during the simulation.\r\n\r\nEnsure the projectedInventoryLevels array contains the inventory level for each day of the simulation.\r\n\r\nReturn the projected inventory levels, the number of stockout days, and the average inventory level.\r\n\r\nOutput in JSON format.\r\n`,\r\n});\r\n\r\nconst simulateInventoryProjectionsFlow = ai.defineFlow(\r\n  {\r\n    name: \"simulateInventoryProjectionsFlow\",\r\n    inputSchema: SimulateInventoryProjectionsInputSchema,\r\n    outputSchema: SimulateInventoryProjectionsOutputSchema,\r\n  },\r\n  async (input) => {\r\n    const { output } = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":"AAAA,sDAAsD;;;;;;AAGtD;;;;;;CAMC,GAED;AACA;AAAA;;;;;AAEA,MAAM,0CAA0C,0LAAC,CAAC,MAAM,CAAC;IACvD,uBAAuB,0LAAC,CACrB,MAAM,GACN,QAAQ,CACP;IAEJ,cAAc,0LAAC,CACZ,MAAM,GACN,QAAQ,CACP;IAEJ,iBAAiB,0LAAC,CACf,MAAM,GACN,QAAQ,CACP;IAEJ,cAAc,0LAAC,CACZ,MAAM,GACN,QAAQ,CAAC;IACZ,iBAAiB,0LAAC,CACf,MAAM,GACN,QAAQ,CAAC;IACZ,mBAAmB,0LAAC,CACjB,MAAM,GACN,QAAQ,CAAC;IACZ,gBAAgB,0LAAC,CACd,MAAM,GACN,QAAQ,CAAC;IACZ,iBAAiB,0LAAC,CACf,KAAK,CAAC,0LAAC,CAAC,MAAM,IACd,QAAQ,CACP;IAEJ,oBAAoB,0LAAC,CAClB,KAAK,CAAC,0LAAC,CAAC,MAAM,IACd,QAAQ,CAAC;AACd;AAKA,MAAM,2CAA2C,0LAAC,CAAC,MAAM,CAAC;IACxD,0BAA0B,0LAAC,CACxB,KAAK,CAAC,0LAAC,CAAC,MAAM,IACd,QAAQ,CAAC;IACZ,cAAc,0LAAC,CACZ,MAAM,GACN,QAAQ,CACP;IAEJ,uBAAuB,0LAAC,CACrB,MAAM,GACN,QAAQ,CAAC;AACd;AAKO,eAAe,6BACpB,KAAwC;IAExC,OAAO,iCAAiC;AAC1C;AAEA,MAAM,SAAS,uKAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAE,QAAQ;IAAwC;IACzD,QAAQ;QAAE,QAAQ;IAAyC;IAC3D,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;AAmBX,CAAC;AACD;AAEA,MAAM,mCAAmC,uKAAE,CAAC,UAAU,CACpD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO;IACL,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;IAChC,OAAO;AACT;;;IAzCoB;;AAAA,6RAAA","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nilay/OneDrive/Desktop/inbound-logistic/.next-internal/server/app/%28app%29/inventory/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {simulateInventoryProjections as '40465938720c86d21457fd871646d22fa5c55c0509'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nilay/OneDrive/Desktop/inbound-logistic/src/components/inventory/inventory-simulation.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/OneDrive/Desktop/inbound-logistic/src/components/inventory/inventory-simulation.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/OneDrive/Desktop/inbound-logistic/src/components/inventory/inventory-simulation.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,sTAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAuV,GACpX,qHACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nilay/OneDrive/Desktop/inbound-logistic/src/components/inventory/inventory-simulation.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/OneDrive/Desktop/inbound-logistic/src/components/inventory/inventory-simulation.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/OneDrive/Desktop/inbound-logistic/src/components/inventory/inventory-simulation.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,sTAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAmU,GAChW,iGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nilay/OneDrive/Desktop/inbound-logistic/src/app/%28app%29/inventory/page.tsx"],"sourcesContent":["import InventorySimulation from \"@/components/inventory/inventory-simulation\";\r\n\r\nexport default function InventoryPage() {\r\n  return (\r\n    <div>\r\n      <InventorySimulation />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,4RAAC;kBACC,cAAA,4RAAC,mNAAmB;;;;;;;;;;AAG1B","debugId":null}}]
}